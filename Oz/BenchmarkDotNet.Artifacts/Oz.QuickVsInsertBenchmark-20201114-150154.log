// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 4 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet restore  /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in D:\Development\OzWorks\Oz\bin\Debug\netcoreapp3.1\ad3d6880-cd4e-4071-93ee-249f077d411f
// command took 2.58s and exited with 0
// start dotnet build -c Release  --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 in D:\Development\OzWorks\Oz\bin\Debug\netcoreapp3.1\ad3d6880-cd4e-4071-93ee-249f077d411f
// command took 6.47s and exited with 0
// ***** Done, took 00:00:09 (9.23 sec)   *****
// Found 4 benchmarks:
//   QuickVsInsertBenchmark.QuickSortWithSameValues: Job-EJIXGU(InvocationCount=1, UnrollFactor=1)
//   QuickVsInsertBenchmark.InsertSortWithSameValues: Job-EJIXGU(InvocationCount=1, UnrollFactor=1)
//   QuickVsInsertBenchmark.QuickSortWithDifferentValues: Job-EJIXGU(InvocationCount=1, UnrollFactor=1)
//   QuickVsInsertBenchmark.InsertSortWithDifferentValues: Job-EJIXGU(InvocationCount=1, UnrollFactor=1)

// **************************
// Benchmark: QuickVsInsertBenchmark.QuickSortWithSameValues: Job-EJIXGU(InvocationCount=1, UnrollFactor=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "ad3d6880-cd4e-4071-93ee-249f077d411f.dll" --benchmarkName "Oz.QuickVsInsertBenchmark.QuickSortWithSameValues" --job "InvocationCount=1, UnrollFactor=1" --benchmarkId 0 in D:\Development\OzWorks\Oz\bin\Debug\netcoreapp3.1\ad3d6880-cd4e-4071-93ee-249f077d411f\bin\Release\netcoreapp3.1
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.1.10 (CoreCLR 4.700.20.51601, CoreFX 4.700.20.51901), X64 RyuJIT
// GC=Concurrent Workstation
// Job: Job-VYTYSG(InvocationCount=1, UnrollFactor=1)

OverheadJitting  1: 1 op, 312900.00 ns, 312.9000 us/op
WorkloadJitting  1: 1 op, 926554400.00 ns, 926.5544 ms/op

OverheadWarmup   1: 1 op, 5500.00 ns, 5.5000 us/op
OverheadWarmup   2: 1 op, 600.00 ns, 600.0000 ns/op
OverheadWarmup   3: 1 op, 600.00 ns, 600.0000 ns/op
OverheadWarmup   4: 1 op, 1300.00 ns, 1.3000 us/op
OverheadWarmup   5: 1 op, 500.00 ns, 500.0000 ns/op
OverheadWarmup   6: 1 op, 300.00 ns, 300.0000 ns/op
OverheadWarmup   7: 1 op, 500.00 ns, 500.0000 ns/op

OverheadActual   1: 1 op, 600.00 ns, 600.0000 ns/op
OverheadActual   2: 1 op, 600.00 ns, 600.0000 ns/op
OverheadActual   3: 1 op, 500.00 ns, 500.0000 ns/op
OverheadActual   4: 1 op, 600.00 ns, 600.0000 ns/op
OverheadActual   5: 1 op, 500.00 ns, 500.0000 ns/op
OverheadActual   6: 1 op, 500.00 ns, 500.0000 ns/op
OverheadActual   7: 1 op, 800.00 ns, 800.0000 ns/op
OverheadActual   8: 1 op, 300.00 ns, 300.0000 ns/op
OverheadActual   9: 1 op, 600.00 ns, 600.0000 ns/op
OverheadActual  10: 1 op, 400.00 ns, 400.0000 ns/op
OverheadActual  11: 1 op, 300.00 ns, 300.0000 ns/op
OverheadActual  12: 1 op, 400.00 ns, 400.0000 ns/op
OverheadActual  13: 1 op, 300.00 ns, 300.0000 ns/op
OverheadActual  14: 1 op, 500.00 ns, 500.0000 ns/op
OverheadActual  15: 1 op, 500.00 ns, 500.0000 ns/op
OverheadActual  16: 1 op, 300.00 ns, 300.0000 ns/op
OverheadActual  17: 1 op, 400.00 ns, 400.0000 ns/op
OverheadActual  18: 1 op, 800.00 ns, 800.0000 ns/op
OverheadActual  19: 1 op, 400.00 ns, 400.0000 ns/op
OverheadActual  20: 1 op, 300.00 ns, 300.0000 ns/op

WorkloadWarmup   1: 1 op, 887105800.00 ns, 887.1058 ms/op
WorkloadWarmup   2: 1 op, 885751900.00 ns, 885.7519 ms/op
WorkloadWarmup   3: 1 op, 879131100.00 ns, 879.1311 ms/op
WorkloadWarmup   4: 1 op, 884799800.00 ns, 884.7998 ms/op
WorkloadWarmup   5: 1 op, 882932600.00 ns, 882.9326 ms/op
WorkloadWarmup   6: 1 op, 896171400.00 ns, 896.1714 ms/op
WorkloadWarmup   7: 1 op, 888792900.00 ns, 888.7929 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 884452200.00 ns, 884.4522 ms/op
WorkloadActual   2: 1 op, 884279300.00 ns, 884.2793 ms/op
WorkloadActual   3: 1 op, 882231600.00 ns, 882.2316 ms/op
WorkloadActual   4: 1 op, 899914000.00 ns, 899.9140 ms/op
WorkloadActual   5: 1 op, 880383400.00 ns, 880.3834 ms/op
WorkloadActual   6: 1 op, 879012800.00 ns, 879.0128 ms/op
WorkloadActual   7: 1 op, 890946700.00 ns, 890.9467 ms/op
WorkloadActual   8: 1 op, 879276000.00 ns, 879.2760 ms/op
WorkloadActual   9: 1 op, 889022900.00 ns, 889.0229 ms/op
WorkloadActual  10: 1 op, 882601400.00 ns, 882.6014 ms/op
WorkloadActual  11: 1 op, 902253500.00 ns, 902.2535 ms/op
WorkloadActual  12: 1 op, 880320100.00 ns, 880.3201 ms/op
WorkloadActual  13: 1 op, 882839700.00 ns, 882.8397 ms/op
WorkloadActual  14: 1 op, 886200800.00 ns, 886.2008 ms/op
WorkloadActual  15: 1 op, 887024900.00 ns, 887.0249 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 884451700.00 ns, 884.4517 ms/op
WorkloadResult   2: 1 op, 884278800.00 ns, 884.2788 ms/op
WorkloadResult   3: 1 op, 882231100.00 ns, 882.2311 ms/op
WorkloadResult   4: 1 op, 880382900.00 ns, 880.3829 ms/op
WorkloadResult   5: 1 op, 879012300.00 ns, 879.0123 ms/op
WorkloadResult   6: 1 op, 890946200.00 ns, 890.9462 ms/op
WorkloadResult   7: 1 op, 879275500.00 ns, 879.2755 ms/op
WorkloadResult   8: 1 op, 889022400.00 ns, 889.0224 ms/op
WorkloadResult   9: 1 op, 882600900.00 ns, 882.6009 ms/op
WorkloadResult  10: 1 op, 880319600.00 ns, 880.3196 ms/op
WorkloadResult  11: 1 op, 882839200.00 ns, 882.8392 ms/op
WorkloadResult  12: 1 op, 886200300.00 ns, 886.2003 ms/op
WorkloadResult  13: 1 op, 887024400.00 ns, 887.0244 ms/op

// AfterAll
// Benchmark Process 19108 has exited with code 0

Mean = 883.737 ms, StdErr = 1.035 ms (0.12%), N = 13, StdDev = 3.732 ms
Min = 879.012 ms, Q1 = 880.383 ms, Median = 882.839 ms, Q3 = 886.200 ms, Max = 890.946 ms
IQR = 5.817 ms, LowerFence = 871.657 ms, UpperFence = 894.926 ms
ConfidenceInterval = [879.268 ms; 888.206 ms] (CI 99.9%), Margin = 4.469 ms (0.51% of Mean)
Skewness = 0.44, Kurtosis = 1.9, MValue = 2

// **************************
// Benchmark: QuickVsInsertBenchmark.InsertSortWithSameValues: Job-EJIXGU(InvocationCount=1, UnrollFactor=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "ad3d6880-cd4e-4071-93ee-249f077d411f.dll" --benchmarkName "Oz.QuickVsInsertBenchmark.InsertSortWithSameValues" --job "InvocationCount=1, UnrollFactor=1" --benchmarkId 1 in D:\Development\OzWorks\Oz\bin\Debug\netcoreapp3.1\ad3d6880-cd4e-4071-93ee-249f077d411f\bin\Release\netcoreapp3.1
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.1.10 (CoreCLR 4.700.20.51601, CoreFX 4.700.20.51901), X64 RyuJIT
// GC=Concurrent Workstation
// Job: Job-DXCQXE(InvocationCount=1, UnrollFactor=1)

OverheadJitting  1: 1 op, 315900.00 ns, 315.9000 us/op
WorkloadJitting  1: 1 op, 2257900.00 ns, 2.2579 ms/op

OverheadWarmup   1: 1 op, 700.00 ns, 700.0000 ns/op
OverheadWarmup   2: 1 op, 500.00 ns, 500.0000 ns/op
OverheadWarmup   3: 1 op, 500.00 ns, 500.0000 ns/op
OverheadWarmup   4: 1 op, 400.00 ns, 400.0000 ns/op
OverheadWarmup   5: 1 op, 500.00 ns, 500.0000 ns/op
OverheadWarmup   6: 1 op, 2700.00 ns, 2.7000 us/op
OverheadWarmup   7: 1 op, 700.00 ns, 700.0000 ns/op

OverheadActual   1: 1 op, 600.00 ns, 600.0000 ns/op
OverheadActual   2: 1 op, 700.00 ns, 700.0000 ns/op
OverheadActual   3: 1 op, 600.00 ns, 600.0000 ns/op
OverheadActual   4: 1 op, 2200.00 ns, 2.2000 us/op
OverheadActual   5: 1 op, 600.00 ns, 600.0000 ns/op
OverheadActual   6: 1 op, 500.00 ns, 500.0000 ns/op
OverheadActual   7: 1 op, 500.00 ns, 500.0000 ns/op
OverheadActual   8: 1 op, 1200.00 ns, 1.2000 us/op
OverheadActual   9: 1 op, 1500.00 ns, 1.5000 us/op
OverheadActual  10: 1 op, 700.00 ns, 700.0000 ns/op
OverheadActual  11: 1 op, 500.00 ns, 500.0000 ns/op
OverheadActual  12: 1 op, 700.00 ns, 700.0000 ns/op
OverheadActual  13: 1 op, 600.00 ns, 600.0000 ns/op
OverheadActual  14: 1 op, 500.00 ns, 500.0000 ns/op
OverheadActual  15: 1 op, 400.00 ns, 400.0000 ns/op
OverheadActual  16: 1 op, 500.00 ns, 500.0000 ns/op
OverheadActual  17: 1 op, 400.00 ns, 400.0000 ns/op
OverheadActual  18: 1 op, 1000.00 ns, 1.0000 us/op
OverheadActual  19: 1 op, 2200.00 ns, 2.2000 us/op
OverheadActual  20: 1 op, 700.00 ns, 700.0000 ns/op

WorkloadWarmup   1: 1 op, 175800.00 ns, 175.8000 us/op
WorkloadWarmup   2: 1 op, 169300.00 ns, 169.3000 us/op
WorkloadWarmup   3: 1 op, 168900.00 ns, 168.9000 us/op
WorkloadWarmup   4: 1 op, 172700.00 ns, 172.7000 us/op
WorkloadWarmup   5: 1 op, 174100.00 ns, 174.1000 us/op
WorkloadWarmup   6: 1 op, 297300.00 ns, 297.3000 us/op
WorkloadWarmup   7: 1 op, 173400.00 ns, 173.4000 us/op
WorkloadWarmup   8: 1 op, 169200.00 ns, 169.2000 us/op
WorkloadWarmup   9: 1 op, 172000.00 ns, 172.0000 us/op
WorkloadWarmup  10: 1 op, 178700.00 ns, 178.7000 us/op
WorkloadWarmup  11: 1 op, 245900.00 ns, 245.9000 us/op
WorkloadWarmup  12: 1 op, 270700.00 ns, 270.7000 us/op
WorkloadWarmup  13: 1 op, 192100.00 ns, 192.1000 us/op

// BeforeActualRun
WorkloadActual   1: 1 op, 169500.00 ns, 169.5000 us/op
WorkloadActual   2: 1 op, 181100.00 ns, 181.1000 us/op
WorkloadActual   3: 1 op, 168800.00 ns, 168.8000 us/op
WorkloadActual   4: 1 op, 299400.00 ns, 299.4000 us/op
WorkloadActual   5: 1 op, 169300.00 ns, 169.3000 us/op
WorkloadActual   6: 1 op, 172200.00 ns, 172.2000 us/op
WorkloadActual   7: 1 op, 168600.00 ns, 168.6000 us/op
WorkloadActual   8: 1 op, 170600.00 ns, 170.6000 us/op
WorkloadActual   9: 1 op, 172700.00 ns, 172.7000 us/op
WorkloadActual  10: 1 op, 239300.00 ns, 239.3000 us/op
WorkloadActual  11: 1 op, 410600.00 ns, 410.6000 us/op
WorkloadActual  12: 1 op, 169100.00 ns, 169.1000 us/op
WorkloadActual  13: 1 op, 169200.00 ns, 169.2000 us/op
WorkloadActual  14: 1 op, 290800.00 ns, 290.8000 us/op
WorkloadActual  15: 1 op, 177900.00 ns, 177.9000 us/op
WorkloadActual  16: 1 op, 187000.00 ns, 187.0000 us/op
WorkloadActual  17: 1 op, 173200.00 ns, 173.2000 us/op
WorkloadActual  18: 1 op, 176400.00 ns, 176.4000 us/op
WorkloadActual  19: 1 op, 170000.00 ns, 170.0000 us/op
WorkloadActual  20: 1 op, 172900.00 ns, 172.9000 us/op
WorkloadActual  21: 1 op, 176400.00 ns, 176.4000 us/op
WorkloadActual  22: 1 op, 179900.00 ns, 179.9000 us/op
WorkloadActual  23: 1 op, 251900.00 ns, 251.9000 us/op
WorkloadActual  24: 1 op, 280600.00 ns, 280.6000 us/op
WorkloadActual  25: 1 op, 172700.00 ns, 172.7000 us/op
WorkloadActual  26: 1 op, 173200.00 ns, 173.2000 us/op
WorkloadActual  27: 1 op, 169200.00 ns, 169.2000 us/op
WorkloadActual  28: 1 op, 171100.00 ns, 171.1000 us/op
WorkloadActual  29: 1 op, 279400.00 ns, 279.4000 us/op
WorkloadActual  30: 1 op, 312500.00 ns, 312.5000 us/op
WorkloadActual  31: 1 op, 171200.00 ns, 171.2000 us/op
WorkloadActual  32: 1 op, 205900.00 ns, 205.9000 us/op
WorkloadActual  33: 1 op, 175100.00 ns, 175.1000 us/op
WorkloadActual  34: 1 op, 169700.00 ns, 169.7000 us/op
WorkloadActual  35: 1 op, 169100.00 ns, 169.1000 us/op
WorkloadActual  36: 1 op, 417400.00 ns, 417.4000 us/op
WorkloadActual  37: 1 op, 182600.00 ns, 182.6000 us/op
WorkloadActual  38: 1 op, 181900.00 ns, 181.9000 us/op
WorkloadActual  39: 1 op, 173800.00 ns, 173.8000 us/op
WorkloadActual  40: 1 op, 170600.00 ns, 170.6000 us/op
WorkloadActual  41: 1 op, 177700.00 ns, 177.7000 us/op
WorkloadActual  42: 1 op, 228000.00 ns, 228.0000 us/op
WorkloadActual  43: 1 op, 175700.00 ns, 175.7000 us/op
WorkloadActual  44: 1 op, 169200.00 ns, 169.2000 us/op
WorkloadActual  45: 1 op, 181400.00 ns, 181.4000 us/op
WorkloadActual  46: 1 op, 168900.00 ns, 168.9000 us/op
WorkloadActual  47: 1 op, 381600.00 ns, 381.6000 us/op
WorkloadActual  48: 1 op, 522900.00 ns, 522.9000 us/op
WorkloadActual  49: 1 op, 462500.00 ns, 462.5000 us/op
WorkloadActual  50: 1 op, 173600.00 ns, 173.6000 us/op
WorkloadActual  51: 1 op, 176900.00 ns, 176.9000 us/op
WorkloadActual  52: 1 op, 169300.00 ns, 169.3000 us/op
WorkloadActual  53: 1 op, 212000.00 ns, 212.0000 us/op
WorkloadActual  54: 1 op, 207000.00 ns, 207.0000 us/op
WorkloadActual  55: 1 op, 170000.00 ns, 170.0000 us/op
WorkloadActual  56: 1 op, 169300.00 ns, 169.3000 us/op
WorkloadActual  57: 1 op, 169200.00 ns, 169.2000 us/op
WorkloadActual  58: 1 op, 217800.00 ns, 217.8000 us/op
WorkloadActual  59: 1 op, 172600.00 ns, 172.6000 us/op
WorkloadActual  60: 1 op, 174900.00 ns, 174.9000 us/op
WorkloadActual  61: 1 op, 173400.00 ns, 173.4000 us/op
WorkloadActual  62: 1 op, 172900.00 ns, 172.9000 us/op
WorkloadActual  63: 1 op, 263100.00 ns, 263.1000 us/op
WorkloadActual  64: 1 op, 252500.00 ns, 252.5000 us/op
WorkloadActual  65: 1 op, 255900.00 ns, 255.9000 us/op
WorkloadActual  66: 1 op, 130300.00 ns, 130.3000 us/op
WorkloadActual  67: 1 op, 127300.00 ns, 127.3000 us/op
WorkloadActual  68: 1 op, 239700.00 ns, 239.7000 us/op
WorkloadActual  69: 1 op, 130700.00 ns, 130.7000 us/op
WorkloadActual  70: 1 op, 126600.00 ns, 126.6000 us/op
WorkloadActual  71: 1 op, 124200.00 ns, 124.2000 us/op
WorkloadActual  72: 1 op, 122900.00 ns, 122.9000 us/op
WorkloadActual  73: 1 op, 126500.00 ns, 126.5000 us/op
WorkloadActual  74: 1 op, 221900.00 ns, 221.9000 us/op
WorkloadActual  75: 1 op, 196500.00 ns, 196.5000 us/op
WorkloadActual  76: 1 op, 210500.00 ns, 210.5000 us/op
WorkloadActual  77: 1 op, 188100.00 ns, 188.1000 us/op
WorkloadActual  78: 1 op, 190400.00 ns, 190.4000 us/op
WorkloadActual  79: 1 op, 126900.00 ns, 126.9000 us/op
WorkloadActual  80: 1 op, 204500.00 ns, 204.5000 us/op
WorkloadActual  81: 1 op, 265200.00 ns, 265.2000 us/op
WorkloadActual  82: 1 op, 193400.00 ns, 193.4000 us/op
WorkloadActual  83: 1 op, 203400.00 ns, 203.4000 us/op
WorkloadActual  84: 1 op, 218100.00 ns, 218.1000 us/op
WorkloadActual  85: 1 op, 184000.00 ns, 184.0000 us/op
WorkloadActual  86: 1 op, 123900.00 ns, 123.9000 us/op
WorkloadActual  87: 1 op, 401000.00 ns, 401.0000 us/op
WorkloadActual  88: 1 op, 241500.00 ns, 241.5000 us/op
WorkloadActual  89: 1 op, 210300.00 ns, 210.3000 us/op
WorkloadActual  90: 1 op, 126900.00 ns, 126.9000 us/op
WorkloadActual  91: 1 op, 126800.00 ns, 126.8000 us/op
WorkloadActual  92: 1 op, 126700.00 ns, 126.7000 us/op
WorkloadActual  93: 1 op, 235700.00 ns, 235.7000 us/op
WorkloadActual  94: 1 op, 216200.00 ns, 216.2000 us/op
WorkloadActual  95: 1 op, 125400.00 ns, 125.4000 us/op
WorkloadActual  96: 1 op, 138500.00 ns, 138.5000 us/op
WorkloadActual  97: 1 op, 130000.00 ns, 130.0000 us/op
WorkloadActual  98: 1 op, 128300.00 ns, 128.3000 us/op
WorkloadActual  99: 1 op, 189800.00 ns, 189.8000 us/op
WorkloadActual  100: 1 op, 216900.00 ns, 216.9000 us/op

// AfterActualRun
WorkloadResult   1: 1 op, 168900.00 ns, 168.9000 us/op
WorkloadResult   2: 1 op, 180500.00 ns, 180.5000 us/op
WorkloadResult   3: 1 op, 168200.00 ns, 168.2000 us/op
WorkloadResult   4: 1 op, 168700.00 ns, 168.7000 us/op
WorkloadResult   5: 1 op, 171600.00 ns, 171.6000 us/op
WorkloadResult   6: 1 op, 168000.00 ns, 168.0000 us/op
WorkloadResult   7: 1 op, 170000.00 ns, 170.0000 us/op
WorkloadResult   8: 1 op, 172100.00 ns, 172.1000 us/op
WorkloadResult   9: 1 op, 238700.00 ns, 238.7000 us/op
WorkloadResult  10: 1 op, 168500.00 ns, 168.5000 us/op
WorkloadResult  11: 1 op, 168600.00 ns, 168.6000 us/op
WorkloadResult  12: 1 op, 177300.00 ns, 177.3000 us/op
WorkloadResult  13: 1 op, 186400.00 ns, 186.4000 us/op
WorkloadResult  14: 1 op, 172600.00 ns, 172.6000 us/op
WorkloadResult  15: 1 op, 175800.00 ns, 175.8000 us/op
WorkloadResult  16: 1 op, 169400.00 ns, 169.4000 us/op
WorkloadResult  17: 1 op, 172300.00 ns, 172.3000 us/op
WorkloadResult  18: 1 op, 175800.00 ns, 175.8000 us/op
WorkloadResult  19: 1 op, 179300.00 ns, 179.3000 us/op
WorkloadResult  20: 1 op, 251300.00 ns, 251.3000 us/op
WorkloadResult  21: 1 op, 280000.00 ns, 280.0000 us/op
WorkloadResult  22: 1 op, 172100.00 ns, 172.1000 us/op
WorkloadResult  23: 1 op, 172600.00 ns, 172.6000 us/op
WorkloadResult  24: 1 op, 168600.00 ns, 168.6000 us/op
WorkloadResult  25: 1 op, 170500.00 ns, 170.5000 us/op
WorkloadResult  26: 1 op, 278800.00 ns, 278.8000 us/op
WorkloadResult  27: 1 op, 170600.00 ns, 170.6000 us/op
WorkloadResult  28: 1 op, 205300.00 ns, 205.3000 us/op
WorkloadResult  29: 1 op, 174500.00 ns, 174.5000 us/op
WorkloadResult  30: 1 op, 169100.00 ns, 169.1000 us/op
WorkloadResult  31: 1 op, 168500.00 ns, 168.5000 us/op
WorkloadResult  32: 1 op, 182000.00 ns, 182.0000 us/op
WorkloadResult  33: 1 op, 181300.00 ns, 181.3000 us/op
WorkloadResult  34: 1 op, 173200.00 ns, 173.2000 us/op
WorkloadResult  35: 1 op, 170000.00 ns, 170.0000 us/op
WorkloadResult  36: 1 op, 177100.00 ns, 177.1000 us/op
WorkloadResult  37: 1 op, 227400.00 ns, 227.4000 us/op
WorkloadResult  38: 1 op, 175100.00 ns, 175.1000 us/op
WorkloadResult  39: 1 op, 168600.00 ns, 168.6000 us/op
WorkloadResult  40: 1 op, 180800.00 ns, 180.8000 us/op
WorkloadResult  41: 1 op, 168300.00 ns, 168.3000 us/op
WorkloadResult  42: 1 op, 173000.00 ns, 173.0000 us/op
WorkloadResult  43: 1 op, 176300.00 ns, 176.3000 us/op
WorkloadResult  44: 1 op, 168700.00 ns, 168.7000 us/op
WorkloadResult  45: 1 op, 211400.00 ns, 211.4000 us/op
WorkloadResult  46: 1 op, 206400.00 ns, 206.4000 us/op
WorkloadResult  47: 1 op, 169400.00 ns, 169.4000 us/op
WorkloadResult  48: 1 op, 168700.00 ns, 168.7000 us/op
WorkloadResult  49: 1 op, 168600.00 ns, 168.6000 us/op
WorkloadResult  50: 1 op, 217200.00 ns, 217.2000 us/op
WorkloadResult  51: 1 op, 172000.00 ns, 172.0000 us/op
WorkloadResult  52: 1 op, 174300.00 ns, 174.3000 us/op
WorkloadResult  53: 1 op, 172800.00 ns, 172.8000 us/op
WorkloadResult  54: 1 op, 172300.00 ns, 172.3000 us/op
WorkloadResult  55: 1 op, 262500.00 ns, 262.5000 us/op
WorkloadResult  56: 1 op, 251900.00 ns, 251.9000 us/op
WorkloadResult  57: 1 op, 255300.00 ns, 255.3000 us/op
WorkloadResult  58: 1 op, 129700.00 ns, 129.7000 us/op
WorkloadResult  59: 1 op, 126700.00 ns, 126.7000 us/op
WorkloadResult  60: 1 op, 239100.00 ns, 239.1000 us/op
WorkloadResult  61: 1 op, 130100.00 ns, 130.1000 us/op
WorkloadResult  62: 1 op, 126000.00 ns, 126.0000 us/op
WorkloadResult  63: 1 op, 123600.00 ns, 123.6000 us/op
WorkloadResult  64: 1 op, 122300.00 ns, 122.3000 us/op
WorkloadResult  65: 1 op, 125900.00 ns, 125.9000 us/op
WorkloadResult  66: 1 op, 221300.00 ns, 221.3000 us/op
WorkloadResult  67: 1 op, 195900.00 ns, 195.9000 us/op
WorkloadResult  68: 1 op, 209900.00 ns, 209.9000 us/op
WorkloadResult  69: 1 op, 187500.00 ns, 187.5000 us/op
WorkloadResult  70: 1 op, 189800.00 ns, 189.8000 us/op
WorkloadResult  71: 1 op, 126300.00 ns, 126.3000 us/op
WorkloadResult  72: 1 op, 203900.00 ns, 203.9000 us/op
WorkloadResult  73: 1 op, 264600.00 ns, 264.6000 us/op
WorkloadResult  74: 1 op, 192800.00 ns, 192.8000 us/op
WorkloadResult  75: 1 op, 202800.00 ns, 202.8000 us/op
WorkloadResult  76: 1 op, 217500.00 ns, 217.5000 us/op
WorkloadResult  77: 1 op, 183400.00 ns, 183.4000 us/op
WorkloadResult  78: 1 op, 123300.00 ns, 123.3000 us/op
WorkloadResult  79: 1 op, 240900.00 ns, 240.9000 us/op
WorkloadResult  80: 1 op, 209700.00 ns, 209.7000 us/op
WorkloadResult  81: 1 op, 126300.00 ns, 126.3000 us/op
WorkloadResult  82: 1 op, 126200.00 ns, 126.2000 us/op
WorkloadResult  83: 1 op, 126100.00 ns, 126.1000 us/op
WorkloadResult  84: 1 op, 235100.00 ns, 235.1000 us/op
WorkloadResult  85: 1 op, 215600.00 ns, 215.6000 us/op
WorkloadResult  86: 1 op, 124800.00 ns, 124.8000 us/op
WorkloadResult  87: 1 op, 137900.00 ns, 137.9000 us/op
WorkloadResult  88: 1 op, 129400.00 ns, 129.4000 us/op
WorkloadResult  89: 1 op, 127700.00 ns, 127.7000 us/op
WorkloadResult  90: 1 op, 189200.00 ns, 189.2000 us/op
WorkloadResult  91: 1 op, 216300.00 ns, 216.3000 us/op

// AfterAll
// Benchmark Process 13152 has exited with code 0

Mean = 181.393 μs, StdErr = 3.933 μs (2.17%), N = 91, StdDev = 37.523 μs
Min = 122.300 μs, Q1 = 168.600 μs, Median = 173.000 μs, Q3 = 203.350 μs, Max = 280.000 μs
IQR = 34.750 μs, LowerFence = 116.475 μs, UpperFence = 255.475 μs
ConfidenceInterval = [168.012 μs; 194.775 μs] (CI 99.9%), Margin = 13.381 μs (7.38% of Mean)
Skewness = 0.55, Kurtosis = 3.09, MValue = 3.17

// **************************
// Benchmark: QuickVsInsertBenchmark.QuickSortWithDifferentValues: Job-EJIXGU(InvocationCount=1, UnrollFactor=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "ad3d6880-cd4e-4071-93ee-249f077d411f.dll" --benchmarkName "Oz.QuickVsInsertBenchmark.QuickSortWithDifferentValues" --job "InvocationCount=1, UnrollFactor=1" --benchmarkId 2 in D:\Development\OzWorks\Oz\bin\Debug\netcoreapp3.1\ad3d6880-cd4e-4071-93ee-249f077d411f\bin\Release\netcoreapp3.1
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.1.10 (CoreCLR 4.700.20.51601, CoreFX 4.700.20.51901), X64 RyuJIT
// GC=Concurrent Workstation
// Job: Job-DVBRLL(InvocationCount=1, UnrollFactor=1)

OverheadJitting  1: 1 op, 318000.00 ns, 318.0000 us/op

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.ArgumentOutOfRangeException: 'minValue' cannot be greater than maxValue. (Parameter 'minValue')
   at System.Random.Next(Int32 minValue, Int32 maxValue)
   at Oz.Algorithms.DefaultRandomSource.RandomValue(Int32 minValue, Int32 maxValue) in D:\Development\OzWorks\Oz.Algorithms\DefaultRandomSource.cs:line 27
   at Oz.Algorithms.Numerics.ShuffledArray`1.FillPriorities() in D:\Development\OzWorks\Oz.Algorithms\Numerics\ShuffledArray.cs:line 48
   at Oz.Algorithms.Numerics.ShuffledArray`1..ctor(T[] sourceArray, IRandomSource randomSource) in D:\Development\OzWorks\Oz.Algorithms\Numerics\ShuffledArray.cs:line 24
   at Oz.Algorithms.Numerics.ShuffledArray`1..ctor(T[] sourceArray) in D:\Development\OzWorks\Oz.Algorithms\Numerics\ShuffledArray.cs:line 16
   at Oz.QuickVsInsertBenchmark.QuickDifferentSetup() in D:\Development\OzWorks\Oz\QuickVsInsertBenchmark.cs:line 33
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineFactory.Jit(Engine engine, Int32 jitIndex, Int32 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_2.Run(IHost host, String benchmarkName) in D:\Development\OzWorks\Oz\bin\Debug\netcoreapp3.1\ad3d6880-cd4e-4071-93ee-249f077d411f\ad3d6880-cd4e-4071-93ee-249f077d411f.notcs:line 1333
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in D:\Development\OzWorks\Oz\bin\Debug\netcoreapp3.1\ad3d6880-cd4e-4071-93ee-249f077d411f\ad3d6880-cd4e-4071-93ee-249f077d411f.notcs:line 52
// AfterAll
ExitCode != 0
// Benchmark Process 708 has exited with code -1
No more Benchmark runs will be launched as NO measurements were obtained from the previous run!


// **************************
// Benchmark: QuickVsInsertBenchmark.InsertSortWithDifferentValues: Job-EJIXGU(InvocationCount=1, UnrollFactor=1)
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet "ad3d6880-cd4e-4071-93ee-249f077d411f.dll" --benchmarkName "Oz.QuickVsInsertBenchmark.InsertSortWithDifferentValues" --job "InvocationCount=1, UnrollFactor=1" --benchmarkId 3 in D:\Development\OzWorks\Oz\bin\Debug\netcoreapp3.1\ad3d6880-cd4e-4071-93ee-249f077d411f\bin\Release\netcoreapp3.1
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Core 3.1.10 (CoreCLR 4.700.20.51601, CoreFX 4.700.20.51901), X64 RyuJIT
// GC=Concurrent Workstation
// Job: Job-JTTMPT(InvocationCount=1, UnrollFactor=1)

OverheadJitting  1: 1 op, 442100.00 ns, 442.1000 us/op

System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
 ---> System.ArgumentOutOfRangeException: 'minValue' cannot be greater than maxValue. (Parameter 'minValue')
   at System.Random.Next(Int32 minValue, Int32 maxValue)
   at Oz.Algorithms.DefaultRandomSource.RandomValue(Int32 minValue, Int32 maxValue) in D:\Development\OzWorks\Oz.Algorithms\DefaultRandomSource.cs:line 27
   at Oz.Algorithms.Numerics.ShuffledArray`1.FillPriorities() in D:\Development\OzWorks\Oz.Algorithms\Numerics\ShuffledArray.cs:line 48
   at Oz.Algorithms.Numerics.ShuffledArray`1..ctor(T[] sourceArray, IRandomSource randomSource) in D:\Development\OzWorks\Oz.Algorithms\Numerics\ShuffledArray.cs:line 24
   at Oz.Algorithms.Numerics.ShuffledArray`1..ctor(T[] sourceArray) in D:\Development\OzWorks\Oz.Algorithms\Numerics\ShuffledArray.cs:line 16
   at Oz.QuickVsInsertBenchmark.InsertDifferentSetup() in D:\Development\OzWorks\Oz\QuickVsInsertBenchmark.cs:line 43
   at BenchmarkDotNet.Engines.Engine.RunIteration(IterationData data)
   at BenchmarkDotNet.Engines.EngineFactory.Jit(Engine engine, Int32 jitIndex, Int32 invokeCount, Int32 unrollFactor)
   at BenchmarkDotNet.Engines.EngineFactory.CreateReadyToRun(EngineParameters engineParameters)
   at BenchmarkDotNet.Autogenerated.Runnable_3.Run(IHost host, String benchmarkName) in D:\Development\OzWorks\Oz\bin\Debug\netcoreapp3.1\ad3d6880-cd4e-4071-93ee-249f077d411f\ad3d6880-cd4e-4071-93ee-249f077d411f.notcs:line 1916
   --- End of inner exception stack trace ---
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)
   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)
   at BenchmarkDotNet.Autogenerated.UniqueProgramName.AfterAssemblyLoadingAttached(String[] args) in D:\Development\OzWorks\Oz\bin\Debug\netcoreapp3.1\ad3d6880-cd4e-4071-93ee-249f077d411f\ad3d6880-cd4e-4071-93ee-249f077d411f.notcs:line 52
// AfterAll
ExitCode != 0
// Benchmark Process 18960 has exited with code -1
No more Benchmark runs will be launched as NO measurements were obtained from the previous run!


// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\Oz.QuickVsInsertBenchmark-report.csv
  BenchmarkDotNet.Artifacts\results\Oz.QuickVsInsertBenchmark-report-github.md
  BenchmarkDotNet.Artifacts\results\Oz.QuickVsInsertBenchmark-report.html

// * Detailed results *
QuickVsInsertBenchmark.QuickSortWithSameValues: Job-EJIXGU(InvocationCount=1, UnrollFactor=1)
Runtime = .NET Core 3.1.10 (CoreCLR 4.700.20.51601, CoreFX 4.700.20.51901), X64 RyuJIT; GC = Concurrent Workstation
Mean = 883.737 ms, StdErr = 1.035 ms (0.12%), N = 13, StdDev = 3.732 ms
Min = 879.012 ms, Q1 = 880.383 ms, Median = 882.839 ms, Q3 = 886.200 ms, Max = 890.946 ms
IQR = 5.817 ms, LowerFence = 871.657 ms, UpperFence = 894.926 ms
ConfidenceInterval = [879.268 ms; 888.206 ms] (CI 99.9%), Margin = 4.469 ms (0.51% of Mean)
Skewness = 0.44, Kurtosis = 1.9, MValue = 2
-------------------- Histogram --------------------
[876.929 ms ; 893.029 ms) | @@@@@@@@@@@@@
---------------------------------------------------

QuickVsInsertBenchmark.InsertSortWithSameValues: Job-EJIXGU(InvocationCount=1, UnrollFactor=1)
Runtime = .NET Core 3.1.10 (CoreCLR 4.700.20.51601, CoreFX 4.700.20.51901), X64 RyuJIT; GC = Concurrent Workstation
Mean = 181.393 μs, StdErr = 3.933 μs (2.17%), N = 91, StdDev = 37.523 μs
Min = 122.300 μs, Q1 = 168.600 μs, Median = 173.000 μs, Q3 = 203.350 μs, Max = 280.000 μs
IQR = 34.750 μs, LowerFence = 116.475 μs, UpperFence = 255.475 μs
ConfidenceInterval = [168.012 μs; 194.775 μs] (CI 99.9%), Margin = 13.381 μs (7.38% of Mean)
Skewness = 0.55, Kurtosis = 3.09, MValue = 3.17
-------------------- Histogram --------------------
[119.151 μs ; 141.049 μs) | @@@@@@@@@@@@@@@@
[141.049 μs ; 162.947 μs) | 
[162.947 μs ; 189.849 μs) | @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
[189.849 μs ; 201.101 μs) | @@
[201.101 μs ; 222.999 μs) | @@@@@@@@@@@@
[222.999 μs ; 234.251 μs) | @
[234.251 μs ; 256.149 μs) | @@@@@@@
[256.149 μs ; 282.199 μs) | @@@@
---------------------------------------------------

QuickVsInsertBenchmark.QuickSortWithDifferentValues: Job-EJIXGU(InvocationCount=1, UnrollFactor=1)
Runtime = ; GC = 
There are not any results runs

QuickVsInsertBenchmark.InsertSortWithDifferentValues: Job-EJIXGU(InvocationCount=1, UnrollFactor=1)
Runtime = ; GC = 
There are not any results runs

// * Summary *

BenchmarkDotNet=v0.12.1, OS=Windows 10.0.19041.630 (2004/?/20H1)
Intel Core i3-7100U CPU 2.40GHz (Kaby Lake), 1 CPU, 4 logical and 2 physical cores
.NET Core SDK=5.0.100
  [Host]     : .NET Core 3.1.10 (CoreCLR 4.700.20.51601, CoreFX 4.700.20.51901), X64 RyuJIT DEBUG
  Job-EJIXGU : .NET Core 3.1.10 (CoreCLR 4.700.20.51601, CoreFX 4.700.20.51901), X64 RyuJIT

InvocationCount=1  UnrollFactor=1  

|                        Method |         Mean |       Error |      StdDev |
|------------------------------ |-------------:|------------:|------------:|
|       QuickSortWithSameValues | 883,737.3 μs | 4,468.87 μs | 3,731.71 μs |
|      InsertSortWithSameValues |     181.4 μs |    13.38 μs |    37.52 μs |
|  QuickSortWithDifferentValues |           NA |          NA |          NA |
| InsertSortWithDifferentValues |           NA |          NA |          NA |

Benchmarks with issues:
  QuickVsInsertBenchmark.QuickSortWithDifferentValues: Job-EJIXGU(InvocationCount=1, UnrollFactor=1)
  QuickVsInsertBenchmark.InsertSortWithDifferentValues: Job-EJIXGU(InvocationCount=1, UnrollFactor=1)

// * Warnings *
MinIterationTime
  QuickVsInsertBenchmark.InsertSortWithSameValues: InvocationCount=1, UnrollFactor=1 -> The minimum observed iteration time is 122.9000 μs which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
MultimodalDistribution
  QuickVsInsertBenchmark.InsertSortWithSameValues: InvocationCount=1, UnrollFactor=1 -> It seems that the distribution can have several modes (mValue = 3.17)
Environment
  QuickVsInsertBenchmark.QuickSortWithSameValues: InvocationCount=1, UnrollFactor=1 -> Benchmark was built without optimization enabled (most probably a DEBUG configuration). Please, build it in RELEASE.

// * Hints *
Outliers
  QuickVsInsertBenchmark.QuickSortWithSameValues: InvocationCount=1, UnrollFactor=1  -> 2 outliers were removed (899.91 ms, 902.25 ms)
  QuickVsInsertBenchmark.InsertSortWithSameValues: InvocationCount=1, UnrollFactor=1 -> 9 outliers were removed (290.80 μs..522.90 μs)

// * Legends *
  Mean   : Arithmetic mean of all measurements
  Error  : Half of 99.9% confidence interval
  StdDev : Standard deviation of all measurements
  1 μs   : 1 Microsecond (0.000001 sec)

// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:00:23 (23.95 sec), executed benchmarks: 4

Global total time: 00:00:33 (33.2 sec), executed benchmarks: 4
// * Artifacts cleanup *
